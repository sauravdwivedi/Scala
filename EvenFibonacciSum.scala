/** Even Fibonacci Sum: Write a method that returns the sum of all
 *  even Fibonacci numbers. Consider all Fibonacci numbers that are
 *  less than or equal to n. Each new element in the Fibonacci
 *  sequence is generated by adding the previous two elements. 1, 2,
 *  3, 5, 8, 13, 21, 34, 55, 89, ...
 */

import scala.io.StdIn._

object EvenFibonacciSum {
  def evenFibu(n: Int): Unit = {
    var x = new Array[Int](n)
    var i = 0
    var p = 0
    x(0) = 0
    x(1) = 1
    for (i <- 2 to (n - 1)) {
      x(i) = x(i - 1) + x(i - 2)
    }
    print(x.mkString(" , "))
    print("\n\t Cutoff: ")
    var j = scala.io.StdIn.readInt()
    for (i <- 0 to (n - 1)) {
      if (x(i) <= j && x(i) % 2 == 0) {
        p=p + x(i)
      }
    }
    print("\t Sum of even numbers <= Cutoff: ",p)
  }
  
  def main(args: Array[String]): Unit = {
    print("\t Enter length of sequence: ")
    var m = scala.io.StdIn.readInt()
    evenFibu(m)
  }
}
